---
const projects = [
    {
        url: 'https://github.com/tailwindlabs/tailwindcss',
        title: 'Tailwindcss',
        type: 'Open Source',
        stars: '81.7k',
        description: 'A utility-first CSS framework for rapid UI development.',
        time: '2025'
    },
    {
        url: 'https://github.com/ther0n/UnnaturalScrollWheels',
        title: 'UnnaturalScrollWheels',
        type: 'Open Source',
        stars: '3.6k',
        description: 'MacOS helper app for scrolling with mouse and trackpad.',
        time: '2025'
    },
    {
        url: 'https://github.com/raft/raft.github.io',
        title: 'Raft Website',
        type: 'Open Source',
        stars: '1.4k',
        description: 'Website of the Raft Consensus Algorithm.',
        time: '2024'
    },
    {
        url: 'https://github.com/EnergieID/entsoe-py',
        title: 'ENTSOE Py',
        type: 'Open Source',
        stars: '492',
        description:
            'Python API client for European Network of Transmission System Operators for Electricity.',
        time: '2023'
    },
    {
        url: 'https://github.com/LemuelKL/Android-Controlled-Arduino-Bluetooth-Car',
        title: 'Mini Robotic Car',
        type: 'Competition',
        stars: '11',
        description:
            'Android app to remote control an Arduino robotic car through Bluetooth LE.',
        time: '2017'
    },
    {
        url: '',
        title: 'Trading Bot',
        type: 'Competition',
        stars: '',
        description:
            'Python high-frequency trading bot for bonds, stocks, and ETFs. Real-time data stream from Jane Street server.',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/lemuellee.com',
        title: 'lemuellee.com',
        type: 'Personal',
        stars: '7',
        description: 'My personal website, built with Astro and Tailwind CSS.',
        time: 'Present'
    },
    {
        url: 'https://github.com/LemuelKL/Bubble-Sheet-OMR-OpenCV-Qt',
        title: 'Bubble Sheet OMR',
        type: 'Freelance',
        stars: '7',
        description: 'Qt program using OpenCV to process bubble sheets.',
        time: '2018'
    },
    {
        url: 'https://github.com/LemuelKL/CSGO-Auto-Reconnect',
        title: 'CSGO Auto Reconnect',
        type: 'Personal',
        stars: '6',
        description:
            'Simple Python script to reconnect to a CSGO community server on disconnect.',
        time: '2022'
    },
    {
        url: 'https://github.com/d-mok/MathTree',
        title: 'MathTree',
        type: 'Freelance',
        stars: '3',
        description:
            'Web editor and JavaScript-based DSL for generating Maths and Physics MCQs',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/HKU-Calendar-Takeout',
        title: 'HKU Calender Takeout',
        type: 'Personal',
        stars: '2',
        description:
            'Exports HKU Portal course schedules to ics calendar format.',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/HolloRay',
        title: 'Holloray',
        type: 'Coursework',
        stars: '2',
        description:
            'JavaFX 3D CAD DSL with BNF parser, elided SOS, and action semantics interpreter.',
        time: '2023'
    },
    {
        url: 'https://github.com/LemuelKL/SLMS',
        title: 'SLMS',
        type: 'Coursework',
        stars: '2',
        description:
            'School Library Management System written with Qt 5.13.0 and C++11.',
        time: '2020'
    },
    {
        url: '',
        title: 'Musical Ticketing',
        type: 'Freelance',
        stars: '',
        description: 'Full stack ticketing system for a musical event.',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/fyp23049',
        title: 'Bachelor Thesis',
        type: 'Coursework',
        stars: '',
        description:
            'Deep Graph Representation Learning on Corss-border Electricity Trading.',
        time: '2024'
    },
    {
        url: '',
        title: 'Human Presence Detection',
        type: 'Coursework',
        stars: '',
        description:
            'Statistical time-series acoustic sensing of in-door human presence with autocorrelation and fourier analysis.',
        time: '2024'
    },
    {
        url: '',
        title: 'Magnetic Monte Carlo',
        type: 'Coursework',
        stars: '',
        description:
            'Monte Carlo simlation of magnetic quasi-particle for stable energy configurations.',
        time: '2024'
    },
    {
        url: '',
        title: 'ODE Solver',
        type: 'Coursework',
        stars: '',
        description:
            'Python ODE solver by Taylor expansion and piecewise polynomial interpolation.',
        time: '2024'
    },
    {
        url: 'https://github.com/LemuelKL/bible-reading-challenge',
        title: 'Bible Reading Challenge',
        type: 'Personal',
        stars: '',
        description:
            'Full stack Bible Reading Challenge PWA & SPA in Vue, Quasar, Supabase, and Netlify.',
        time: '2022 - Present'
    },
    {
        url: 'https://github.com/LemuelKL/3230shell',
        title: 'Linux Shell',
        type: 'Coursework',
        stars: '',
        description:
            'Linux shell with prog exec, signals, piping, bg processes, and proc stats.',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/COMP3230-PA2',
        title: 'Parrellel Sample Sort',
        type: 'Coursework',
        stars: '',
        description: 'C++ implementation of parallelised sample sort.',
        time: '2022'
    },
    {
        url: 'https://github.com/LemuelKL/svelte-tetris',
        title: 'Svelte Tetris',
        type: 'Personal',
        stars: '',
        description: 'Tetris in Svelte and Tailwind CSS.',
        time: '2022'
    },
    {
        url: '',
        title: 'Pacman AI',
        type: 'Coursework',
        stars: '',
        description:
            'Pacman AI with Bayesian Networks, Hidden Markov Models, and Particle Filters.',
        time: '2023'
    },
    {
        url: 'https://youtu.be/C9JVxHDk_iU',
        title: 'RnaFighter',
        type: 'Coursework',
        stars: '',
        description:
            'Command line game with COVID-19 theme, using C++ and NCurses.',
        time: '2021'
    },
    {
        url: 'https://github.com/LemuelKL/1T-MS-GroupAssigning',
        title: 'Teacher Duty Assigner',
        type: 'Freelance',
        stars: '',
        description: 'Optimal relationship assignment of teachers to students.',
        time: '2018'
    }
]

// Function to calculate `data-aos-duration` based on index
function calculateAosDuration(index) {
    return 1500 + (index * 1500) / projects.length
}
---

<section class="bg-primary">
    <div class="px-2 lg:px-8 2xl:max-w-7xl mx-auto">
        <!-- Replace single header with multiple type headers -->
        <div
            class="grid grid-cols-4 gap-6 text-secondary"
            data-aos="fade-up"
            data-aos-duration="1500"
        >
            <div class="uppercase text-4xl font-extralight my-12">
                Open Source
            </div>
            <div class="uppercase text-4xl font-extralight my-12">
                Freelance
            </div>
            <div class="uppercase text-4xl font-extralight my-12">
                Coursework
            </div>
            <div class="uppercase text-4xl font-extralight my-12">
                Competition
            </div>
        </div>
        <div
            class="grid grid-cols-4 grid-flow-col gap-6 text-secondary"
            data-aos="fade-up"
            data-aos-duration="1500"
        >
            {
                // For each column, filter and map projects of that type
                ['Open Source', 'Freelance', 'Coursework', 'Competition'].map(
                    (type, colIdx) =>
                        projects
                            .filter((p) => p.type === type)
                            .map((project, rowIdx) => (
                                <div
                                    class={`col-start-${colIdx + 1} col-end-${colIdx + 1} row-start-${1 + rowIdx} row-end-${1 + rowIdx} flex flex-col items-start`}
                                    data-aos="fade-up"
                                    data-aos-duration={calculateAosDuration(
                                        rowIdx
                                    )}
                                >
                                    <div class="text-base font-bold">
                                        {project.title}
                                    </div>
                                    <div class="text-sm">
                                        {project.description}
                                    </div>
                                    <div class="text-sm font-semibold">
                                        {project.time}
                                    </div>
                                    {project.stars && (
                                        <div class="text-sm font-light">
                                            {project.stars} stars
                                        </div>
                                    )}
                                    <a
                                        class="text-sm font-extralight"
                                        href={project.url}
                                        target="_blank"
                                    >
                                        Read more
                                    </a>
                                </div>
                            ))
                )
            }
            {
                // Personal projects: appear below Open Source column
                projects
                    .filter((p) => p.type === 'Personal')
                    .map((project, rowIdx) => (
                        <div
                            class={`col-start-1 col-end-1 row-start-${projects.filter((p) => p.type === 'Open Source').length + 1 + rowIdx} row-end-${projects.filter((p) => p.type === 'Open Source').length + 1 + rowIdx} flex flex-col items-start`}
                            data-aos="fade-up"
                            data-aos-duration={calculateAosDuration(rowIdx)}
                        >
                            <div class="text-base font-bold">
                                {project.title}
                            </div>
                            <div class="text-sm">{project.description}</div>
                            <div class="text-sm font-semibold">
                                {project.time}
                            </div>
                            {project.stars && (
                                <div class="text-sm font-light">
                                    {project.stars} stars
                                </div>
                            )}
                            <a
                                class="text-sm font-extralight"
                                href={project.url}
                                target="_blank"
                            >
                                Read more
                            </a>
                        </div>
                    ))
            }
        </div>
    </div>
</section>
